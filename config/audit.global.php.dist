<?php

/**
 * bjyauthorize route guards for reference
 *
   array('route' => 'audit', 'roles' => array('user')),
   array('route' => 'audit/page', 'roles' => array('user')),
   array('route' => 'audit/user', 'roles' => array('user')),
   array('route' => 'audit/revisions', 'roles' => array('user')),
   array('route' => 'audit/revision-entity', 'roles' => array('user')),
   array('route' => 'audit/entity', 'roles' => array('user')),
   array('route' => 'audit/compare', 'roles' => array('user')),
*/


return array(
    'audit' => array(
        'datetimeFormat' => 'r',
        'paginatorLimit' => 20,

        /**
         * The userEntityClassName is a string for the doctrine entity class
         * identifying a user in your application.
         * 
         * This class MUST implement:
            $user->getId()
            $user->getDisplayName()
            $user->getEmail()
         * No interface is provided so an out-of-the-box implementation of ZfcUser
         * will work without adding an interface to define these functions.
         * *No validation of implementation of these functions is made.*
         */
        'userEntityClassName' => 'ZfcUserDoctrineORM\Entity\User',

        /**
         * The authentication service defaults to ZfcUser but if your application 
         * user servcie implements Zend\Authentication\AuthenticationService that's
         * fine too.
         */
        'authenticationService' => 'zfcuser_auth_service',
        
        'tableNamePrefix' => '',
        'tableNameSuffix' => '_audit',
        'revisionTableName' => 'Revision',
        'revisionEntityTableName' => 'RevisionEntity',

        'softDeletableInterfaceName' => '',
              
        /*
         * Entities to audit are specified as array keys
            
            'Db\Entity\song' => array(),
        
         * You may optionally specify a route to the data the entity audits
        
            'Db\Entity\song' => array(
                'route' => 'default',
                'defaults' => array(
                    'controller' => 'song',
                    'action' => 'detail',
                ),
            ),
            
         * When using a route the entity keys will be appended to the default
         * to generate the target route.  These routes will be linked along-side
         * revision entitites so you can browse your application from audit.
         *
         * So if you have this route in your routing tables the id field will 
         * populate from the entity keys to create a url using $view->url
         
            'default' => array(
                'type' => 'Zend\Mvc\Router\Http\Segment',
                'options' => array(
                    'route' => '/[:controller[/:action[/][:id]]]',
                    'constraints' => array(
                        'controller' => '[a-zA-Z][a-zA-Z0-9_-]*',
                        'action' => '[a-zA-Z][a-zA-Z0-9_-]*',
                    ),
                    'defaults' => array(
                        'controller' => 'index',
                        'action' => 'index',
                    ),
                ),

         */
        
        'entities' => array(
            '',
        ),
        
    ),
);

